node {   
    stage('Prepare/Checkout') { // for display purposes
        script {
            def scmUrl = scm.getUserRemoteConfigs()[0].getUrl()
            echo scmUrl
            echo env.VIDEO_INFRA_BRANCH
            dir('infra-configuration') {
                git branch: env.VIDEO_INFRA_BRANCH, url: env.INFRA_CONFIGURATION_REPO, credentialsId: 'jenkins-infra'
            }
            dir('infra-customization') {
                git branch: env.VIDEO_INFRA_BRANCH, url: env.INFRA_CUSTOMIZATIONS_REPO, credentialsId: 'jenkins-infra'
            }
            dir('infra-provisioning') {
                git branch: env.VIDEO_INFRA_BRANCH, url: scmUrl, credentialsId: 'jenkins-infra'
            }
            sh 'cp -a infra-customization/* infra-configuration'
            sh 'cp -a infra-customization/* infra-provisioning'
            sh 'cp ~/.vault-password infra-configuration/.vault-password.txt'
            sh 'rm -rf test-results'
            sh 'mkdir test-results'

        }
    }
    

    stage('Provision') {
       dir('infra-provisioning') {
        if (env.CLOUD_PROVIDER == 'oracle') {
            def skipCreateStep = sh(
                returnStdout: true,
                script: """#!/bin/bash
                    set -x
                    if [ -z "\$SKIP_CREATE_STEP_FLAG" ]; then
                        PUBLIC_IP="\$(dig \$DOMAIN +short | grep -v \$UNIQUE_ID)"
                        if [[ -z "\$PUBLIC_IP" ]]; then
                            # no ip found, so assume we must create the machine
                            SKIP_CREATE_STEP_FLAG="false"
                        else
                            IP_COUNT=\$(echo \$IP | wc -w | awk '{print \$1}')
                            if [[ \$IP_COUNT -eq 1 ]]; then
                                # single ip found, so assume it exists and should not be recreated
                                SKIP_CREATE_STEP_FLAG="true"
                            else
                                SKIP_CREATE_STEP_FLAG="false"
                            fi
                        fi
                    fi
                    echo \$SKIP_CREATE_STEP_FLAG""").trim()
                echo "skip create step: ${skipCreateStep}"
                if (skipCreateStep == 'false') {
                    sh 'terraform/standalone/create-standalone-server-oracle.sh ubuntu'
                    sh 'scripts/create-oracle-cname-stack.sh'
                } else {
                    echo 'Skipping provision step'
                }
            } else {
                sh 'scripts/create-app-standalone-stack.sh'
            }
       }
    // Run the cloud provisioning
    }

    stage('Configure') {
        script {
            dir('infra-configuration') {
                sh 'scripts/configure-standalone.sh ubuntu'
            }
        }
    }
}