node {
  timestamps {
    sshagent (credentials: ['video-infra']) {
        stage('Prepare/Checkout') { // for display purposes
            script {
                def scmUrl = scm.getUserRemoteConfigs()[0].getUrl()
                echo scmUrl
                echo env.VIDEO_INFRA_BRANCH
                dir('infra-configuration') {
                    checkout([$class: 'GitSCM', branches: [[name: "origin/${VIDEO_INFRA_BRANCH}"]], extensions: [[$class: 'SubmoduleOption', disableSubmodules: false, parentCredentials: false, recursiveSubmodules: true, reference: '', trackingSubmodules: false]], userRemoteConfigs: [[credentialsId: 'video-infra', url: env.INFRA_CONFIGURATION_REPO]]])
                }
                dir('infra-customization') {
                    git branch: env.VIDEO_INFRA_BRANCH, url: env.INFRA_CUSTOMIZATIONS_REPO, credentialsId: 'video-infra'
                }
                dir('infra-provisioning') {
                    git branch: env.VIDEO_INFRA_BRANCH, url: scmUrl, credentialsId: 'video-infra'
                }
                sh 'cp -a infra-customization/* infra-configuration'
                sh 'cp -a infra-customization/* infra-provisioning'
                sh 'rm -rf test-results'
                sh 'mkdir test-results'

            }
        }

        stage('Provision') {
          dir('infra-provisioning') {
            if (env.CLOUD_PROVIDER == 'oracle') {
              withCredentials([file(credentialsId: 'oci-jenkins-config', variable: 'OCI_CLI_CONFIG_FILE'), file(credentialsId: 'oci-jenkins-pem', variable: 'OCI_CLI_KEY_FILE'),string(credentialsId: 'ansible-vault-password', variable: 'ANSIBLE_VAULT_PASSWORD_PATH'),sshUserPrivateKey(credentialsId: 'ssh-ubuntu', keyFileVariable: 'CONNECTION_SSH_PRIVATE_KEY_FILE', usernameVariable: 'SSH_USERNAME')]) {
                sh 'rm -rf ~/.oci'
                sh 'mkdir -p ~/.oci'
                sh 'cp "$OCI_CLI_CONFIG_FILE" ~/.oci/config'
                sh 'cp "$OCI_CLI_KEY_FILE" ~/.oci/private-key.pem'
                sh 'echo "$ANSIBLE_VAULT_PASSWORD_PATH" > ./.vault-password.txt'
                sh 'scripts/build-jammy-base-oracle.sh ubuntu'
                sh 'scripts/replicate-image-oracle.sh ubuntu'
              }
            } else {
                sh 'scripts/build-base-image.sh ubuntu'
            }
          }
        // Run the cloud provisioning
        }
    }
  }
}