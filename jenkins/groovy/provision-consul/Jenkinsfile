def utils
pipeline {
    agent any
    options {
        ansiColor('xterm')
        timestamps()
    }
    stages {
        // output stage, shows off our input parameters
        stage ("setup") {
            steps {
                script {
                    // load utility function
                    def rootDir = pwd()
                    utils = load "${rootDir}/jenkins/groovy/Utils.groovy"
                    // checkout repos
                    utils.SetupRepos(env.VIDEO_INFRA_BRANCH)

                    // setup OCI credentials
                    utils.SetupOCI()
                }
            }
        }
        stage ("consul provisioning") {
            steps {
                script {
                    echo 'consul provision beginning'
                    dir('infra-provisioning') {
                        withCredentials([
                            string(credentialsId: 'oci-jenkins-terraform-aws-secret', variable: 'AWS_SECRET_ACCESS_KEY'),
                            string(credentialsId: 'oci-jenkins-terraform-aws-id', variable: 'AWS_ACCESS_KEY_ID'),
                            sshUserPrivateKey(credentialsId: 'ssh-ubuntu', keyFileVariable: 'USER_PRIVATE_KEY_PATH', usernameVariable: 'SSH_USERNAME')
                        ]) {
                            utils.SetupAnsible()
                            utils.SetupSSH()
                            sh '''#!/bin/bash
                            export USER_PUBLIC_KEY_PATH=~/.ssh/ssh_key.pub
                            export ORACLE_GIT_BRANCH=\"$RELEASE_BRANCH\"
                            terraform/consul-server/create-consul-server-oracle.sh $SSH_USERNAME'''
                        }
                        withCredentials([
                            string(credentialsId: 'jenkins-aws-secret', variable: 'AWS_SECRET_ACCESS_KEY'),
                            string(credentialsId: 'jenkins-aws-id', variable: 'AWS_ACCESS_KEY_ID')
                        ]) {
                            sh '''#!/bin/bash
                            set -x
                            . clouds/oracle.sh
                            export RESOURCE_NAME_ROOT="\$ENVIRONMENT-\$ORACLE_REGION-consul"
                            export DNS_NAME="\$RESOURCE_NAME_ROOT.\$DEFAULT_DNS_ZONE_NAME"
                            export CNAME_VALUE="\$RESOURCE_NAME_ROOT"
                            export STACK_NAME="\${RESOURCE_NAME_ROOT}-cname"
                            export UNIQUE_ID="\${RESOURCE_NAME_ROOT}"
                            export CNAME_TARGET="\${DNS_NAME}"
                            export CNAME_VALUE="\${RESOURCE_NAME_ROOT}"
                            scripts/create-oracle-cname-stack.sh'''
                        }
                    }
                }
            }
        }
    }
}
