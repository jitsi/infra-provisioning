
def utils
pipeline {				//indicate the job is written in Declarative Pipeline
    agent any				//agent specifies where the pipeline will execute. 
    stages {
        stage ("setup") {
            steps {
                script {
                    // load utility function
                    def rootDir = pwd()
                    utils = load "${rootDir}/jenkins/groovy/Utils.groovy"
                    // checkout repos
                    utils.SetupRepos(env.VIDEO_INFRA_BRANCH)

                    // setup OCI credentials
                    if (env.CLOUD_PROVIDER == 'oracle') {
                        utils.SetupOCI()
                    }
                }
            }
        }
        // delete the instance
        stage("delete standalone") {
            steps {
                script {
                    dir("infra-provisioning") {
                      sshagent(credentials: ['ssh-ubuntu']) {
                        if (env.CLOUD_PROVIDER == 'oracle') {
                            withCredentials([
                                string(credentialsId: 'oci-jenkins-terraform-aws-secret', variable: 'AWS_SECRET_ACCESS_KEY'),
                                string(credentialsId: 'oci-jenkins-terraform-aws-id', variable: 'AWS_ACCESS_KEY_ID')
                            ]) {
                                sh 'scripts/delete-standalone.sh ubuntu'
                            }
                            withCredentials([
                                string(credentialsId: 'jenkins-aws-secret', variable: 'AWS_SECRET_ACCESS_KEY'),
                                string(credentialsId: 'jenkins-aws-id', variable: 'AWS_ACCESS_KEY_ID'),
                            ]) {
                                sh 'scripts/delete-oracle-cname-stack.sh'
                            }
                        }
                        if (env.CLOUD_PROVIDER == 'aws') {
                            withCredentials([
                                string(credentialsId: 'jenkins-aws-secret', variable: 'AWS_SECRET_ACCESS_KEY'),
                                string(credentialsId: 'jenkins-aws-id', variable: 'AWS_ACCESS_KEY_ID')
                            ]) {
                                sh 'scripts/delete-standalone.sh ubuntu'
                            }
                        }
                      }
                    }
                }
            }
        }
    }
}