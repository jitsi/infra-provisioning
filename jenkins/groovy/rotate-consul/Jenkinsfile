
def rotateConsul(oracle_region) {
    sh(
        script: '''#!/bin/bash
        export USER_PUBLIC_KEY_PATH=~/.ssh/ssh_key.pub
        export ORACLE_GIT_BRANCH="$RELEASE_BRANCH"
        scripts/rotate-consul-oracle.sh $SSH_USERNAME'''
    )
}

pipeline {
    agent any
    options {
        timestamps()
    }
    stages {
        // output stage, shows off our input parameters
        stage ("setup") {
            steps {
                echo 'Jibri Release'
                echo "JIBRI VERSION ${env.JIBRI_VERSION}"
                script {
                    // load utility function
                    def rootDir = pwd()
                    utils = load "${rootDir}/jenkins/groovy/Utils.groovy"
                    // checkout repos
                    utils.SetupRepos(env.VIDEO_INFRA_BRANCH)

                    // setup OCI credentials
                    utils.SetupOCI()
                }
            }
        }
        stage ("consul rotation") {
            steps {
                script {
                    echo 'consul rotate beginning'
                    dir('infra-provisioning') {
                        withCredentials([
                            string(credentialsId: 'oci-jenkins-terraform-aws-secret', variable: 'AWS_SECRET_ACCESS_KEY'),
                            string(credentialsId: 'oci-jenkins-terraform-aws-id', variable: 'AWS_ACCESS_KEY_ID'),
                            sshUserPrivateKey(credentialsId: 'ssh-ubuntu', keyFileVariable: 'USER_PRIVATE_KEY_PATH', usernameVariable: 'SSH_USERNAME')
                        ]) {
                          sshagent (credentials: ['ssh-ubuntu']) {
                            utils.SetupSSH()
                            rotateConsul(env.ORACLE_REGION)
                          }
                        }
                    }
                }
            }
        }
    }
}
