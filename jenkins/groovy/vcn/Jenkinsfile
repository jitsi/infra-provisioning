def utils
pipeline {
  agent any
  options {
      ansiColor('xterm')
      timestamps()
      buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
  }
  stages {
    stage('Prepare/Checkout') { // for display purposes
      steps {
        script {
          // load utility function
          def rootDir = pwd()
          utils = load "${rootDir}/jenkins/groovy/Utils.groovy"
          // checkout repos
          utils.SetupRepos(env.VIDEO_INFRA_BRANCH)

          // setup OCI credentials
          utils.SetupOCI()
        }
      }
    }
    stage('Provision') {
      steps {
        dir('infra-provisioning') {
          script {
            withCredentials([
                string(credentialsId: 'oci-jenkins-terraform-aws-secret', variable: 'AWS_SECRET_ACCESS_KEY'),
                string(credentialsId: 'oci-jenkins-terraform-aws-id', variable: 'AWS_ACCESS_KEY_ID')
            ]) {
                if (env.PROVISION_VCN) {
                    sh 'terraform/vcn/create-vcn.sh'
                }
                if (env.PROVISION_VCN_ADSUBNETS) {
                    sh 'terraform/vcn-adsubnets/create-ad-subnets.sh'
                }
            }
          }
        }
      }
    }
  }
}
