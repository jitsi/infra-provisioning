
def runBatchPatchNodes() {
    sh(
        script: """#!/bin/bash
        export ENVIRONMENT=${env.ENVIRONMENT}
        export ANSIBLE_PLAYBOOK_FILE=${env.ANSIBLE_PLAYBOOK_FILE}
        export ROLE=${env.ROLE}
        export ORACLE_REGION=${env.ORACLE_REGION}
        export BATCH_SIZE=${env.BATCH_SIZE}
        scripts/patch-nodes.sh ubuntu"""
    )
}

pipeline {
    agent any
    options {
        ansiColor('xterm')
        timestamps()
    }
    stages {
        stage ("setup") {
            steps {
                script {
                    // load utility function
                    def rootDir = pwd()
                    utils = load "${rootDir}/jenkins/groovy/Utils.groovy"
                    // checkout repos
                    utils.SetupRepos(env.VIDEO_INFRA_BRANCH)
                    utils.SetupOCI()
                    sh 'mkdir -p test-results'
                }
            }
        } 
        stage ("patch a batch of nodes") {
            steps {
                script {
                    dir("infra-configuration") {
                        withCredentials([
                            string(credentialsId: 'jenkins-aws-secret', variable: 'AWS_SECRET_ACCESS_KEY'),
                            string(credentialsId: 'jenkins-aws-id', variable: 'AWS_ACCESS_KEY_ID')
                        ]) {
                            sshagent (credentials: ['ssh-ubuntu']) {
                                runBatchPatchNodes()
                            }
                        }
                    }
                }
            }
        }
    }
}
