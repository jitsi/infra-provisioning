def utils
pipeline {
  agent any
  options {
    timestamps()
    ansiColor('xterm')
  }
  stages {
    stage('Prepare/Checkout') { // for display purposes
      steps {
        script {
          // load utility function
          def rootDir = pwd()
          utils = load "${rootDir}/jenkins/groovy/Utils.groovy"
          // checkout repos
          utils.SetupRepos(env.VIDEO_INFRA_BRANCH)

          // setup OCI credentials
          utils.SetupOCI()

          sh 'rm -rf test-results'
          sh 'mkdir test-results'
        }
      }
    }
    stage('Provision') {
      steps {
        lock('validate-grid') {
          sshagent (credentials: ['ssh-ubuntu']) {
            dir('infra-provisioning') {
              sh """#!/bin/bash
              export ANSIBLE_FORCE_COLOR=True
              scripts/validate-shards.sh ${env.ENVIRONMENT} \"${env.SHARDS}\" ubuntu"""
            }
          }
        }
      }
    }
  }
  post {
    always {
        dir('test-results') {
            sh '''#!/bin/bash
                for i in *; do 
                cd \$i;
                for z in *.zip; do
                    unzip \$z
                done
                cd -
                done'''     
        }
        archiveArtifacts artifacts: 'test-results/**/*', fingerprint: true
        junit 'test-results/**/target/chrome-2-chrome/*.xml'
    }
    cleanup {
        cleanWs()
    }
  }
}
