pipeline {				//indicate the job is written in Declarative Pipeline
    agent { //agent specifies where the pipeline will execute. 
        label 'jenkins-local'
    }
    options {
        ansiColor('xterm')
        timestamps()
    }
    stages {
        // output stage, shows off our input parameters
        stage ("setup") {
            steps {
                echo 'Jitsi Start Pipeline Beginning'
                sh '''echo JITSI MEET META VERSION: \${JITSI_MEET_META_VERSION}'''

                script {
                    // load utility function
                    def rootDir = pwd()
                    utils = load "${rootDir}/jenkins/groovy/Utils.groovy"
                    // checkout repos
                    utils.SetupRepos(env.VIDEO_INFRA_BRANCH)

                    // setup OCI credentials
                    utils.SetupOCI()
                }
            }
        }
        stage ("configure users") {
            steps {
                dir('infra-configuration') {
                    sh '''#!/bin/bash
                    export ANSIBLE_FORCE_COLOR=True
                    scripts/configure-users.sh'''
                }
            }
        }
        stage ("clear trigger") {
            steps {
                sh '''rm -f /home/jenkins/triggers/reconfigure-users-jenkins'''
            }
        }
    }
}