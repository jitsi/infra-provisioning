pipeline {				//indicate the job is written in Declarative Pipeline
    agent any				//agent specifies where the pipeline will execute. 
    options {
        ansiColor('xterm')
        timestamps()
    }
    stages {
        // output stage, shows off our input parameters
        stage('Prepare/Checkout') {
            steps {
                echo 'Jitsi Start Pipeline Beginning'
                sh '''echo JITSI MEET META VERSION: \${JITSI_MEET_META_VERSION}'''
                script {
                    // load utility function
                    def rootDir = pwd()
                    utils = load "${rootDir}/jenkins/groovy/Utils.groovy"
                    // checkout repos
                    utils.SetupRepos(env.VIDEO_INFRA_BRANCH)
                }
            }
        }
        stage ("find versions") {
            steps {
                dir('infra-configuration') {
                    sh '''#!/bin/bash
                    export ANSIBLE_FORCE_COLOR=True
                    scripts/get-latest-jitsi-versions.sh'''
                }
            }
        }
        stage ("trigger build") {
            steps {
                script {
                    def versionParams = readProperties file: 'infra-configuration/build_versions.properties'

                    build job: 'release-beta-pipeline', wait: false, parameters: [
                        [$class: 'StringParameterValue', name: 'JVB_VERSION', value: versionParams.JVB_VERSION],
                        [$class: 'StringParameterValue', name: 'JITSI_MEET_VERSION', value: versionParams.JITSI_MEET_VERSION],
                        [$class: 'StringParameterValue', name: 'PROSODY_VERSION', value: versionParams.PROSODY_VERSION],
                        [$class: 'StringParameterValue', name: 'JICOFO_VERSION', value: versionParams.JICOFO_VERSION],
                        [$class: 'StringParameterValue', name: 'ENVIRONMENT', value: env.ENVIRONMENT],
                        [$class: 'StringParameterValue', name: 'FORCE_BUILD_IMAGE', value: env.FORCE_BUILD_IMAGE],
                        [$class: 'StringParameterValue', name: 'VIDEO_INFRA_BRANCH', value: env.VIDEO_INFRA_BRANCH]
                    ]
                }
            }
        }
    }
}